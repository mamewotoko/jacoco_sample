package com.mamewo.sample;

import org.junit.Test;
import org.junit.Before;
import static org.junit.Assert.assertTrue;
import java.io.File;
import java.util.List;
import java.util.LinkedList;
import java.util.ArrayList;

public class TestUtil {
	//test sorted....
	public boolean sortedList(List<Comparable> lst){
		if(lst.size() <= 1){
			return true;
		}
		Comparable prev = lst.get(0);
		for(int i = 2; i < lst.size(); i++){
			if(prev.compareTo(lst.get(i)) > 0){
				return false;
			}
		}
		return true;
	}
	
	@Test
	public void testIngeger(){
		
		int data[] = {29, 83, 91, 57, 19, 42, 94, 38, 0, 100, 51, 60, 27, 55, 90, 71, 45, 71, 23, 40, 75, 70, 26, 75, 95, 92, 8, 5, 15, 22, 67, 44, 26, 47, 40, 47, 36, 68, 46, 92, 57, 68, 50, 82, 33, 74, 77, 10, 17, 94, 85, 9, 59, 65, 21, 77, 81, 74, 36, 38, 95, 36, 6, 76, 76, 46, 16, 26, 94, 19, 93, 66, 68, 0, 100, 91, 57, 6, 1, 0, 53, 33, 97, 24, 28, 15, 51, 45, 93, 14, 95, 36, 28, 98, 97, 52, 59, 72, 83, 20};
		List<Comparable> lst = new ArrayList<Comparable>();
		for(int v: data){
			//TODO:
			Util.insertItem(lst, Integer.valueOf(v), 0, lst.size()-1);
			//System.out.println(lst.toString());
		}
		assertTrue("sorted", sortedList(lst));
		assertTrue("size", lst.size() == data.length);
	}

	@Test
	public void test1000(){
		int data[] = {66, 39, 55, 13, 79, 47, 80, 35, 76, 81, 51, 38, 0, 83, 30, 45, 50, 53, 57, 16, 66, 52, 6, 34, 25, 40, 24, 56, 39, 61, 53, 63, 12, 51, 8, 78, 9, 25, 55, 87, 100, 35, 49, 36, 31, 79, 15, 35, 81, 87, 84, 93, 94, 100, 50, 51, 66, 10, 13, 29, 60, 32, 23, 79, 20, 65, 53, 77, 28, 4, 33, 9, 75, 96, 66, 0, 26, 61, 17, 99, 51, 85, 49, 68, 74, 43, 44, 57, 18, 9, 35, 29, 98, 13, 28, 69, 20, 90, 100, 31, 56, 22, 77, 75, 68, 84, 95, 67, 69, 32, 71, 78, 31, 92, 4, 17, 74, 81, 42, 61, 69, 98, 81, 13, 84, 78, 1, 37, 23, 84, 25, 20, 45, 88, 35, 66, 16, 26, 18, 34, 0, 31, 87, 79, 15, 30, 51, 93, 59, 84, 15, 88, 24, 29, 73, 32, 75, 7, 50, 10, 94, 31, 92, 58, 77, 95, 69, 1, 12, 25, 45, 83, 69, 79, 56, 55, 21, 19, 57, 61, 92, 46, 16, 65, 89, 23, 72, 2, 95, 21, 10, 48, 38, 5, 60, 26, 21, 26, 11, 61, 8, 35, 83, 90, 17, 90, 1, 37, 7, 13, 88, 54, 73, 75, 87, 13, 66, 34, 3, 91, 4, 86, 68, 14, 73, 52, 8, 14, 78, 8, 22, 35, 18, 74, 99, 59, 44, 31, 84, 13, 3, 40, 24, 51, 49, 24, 57, 49, 85, 47, 32, 93, 28, 34, 43, 85, 37, 96, 96, 9, 64, 65, 18, 38, 32, 32, 7, 3, 83, 64, 8, 82, 72, 77, 81, 58, 47, 24, 70, 90, 92, 51, 93, 85, 46, 94, 29, 31, 73, 94, 45, 48, 62, 0, 42, 93, 23, 58, 62, 11, 50, 45, 77, 9, 98, 97, 42, 6, 53, 10, 30, 18, 87, 54, 93, 88, 7, 27, 63, 76, 58, 20, 17, 27, 55, 99, 35, 55, 16, 29, 28, 90, 83, 59, 86, 64, 43, 67, 26, 37, 90, 90, 79, 87, 75, 92, 13, 38, 75, 65, 1, 49, 12, 31, 58, 96, 11, 39, 1, 49, 35, 76, 47, 78, 7, 75, 85, 5, 94, 60, 0, 16, 38, 91, 16, 59, 98, 83, 48, 47, 73, 73, 31, 34, 43, 18, 93, 90, 27, 11, 39, 15, 17, 17, 87, 96, 97, 35, 43, 46, 2, 8, 13, 41, 82, 7, 77, 13, 38, 58, 37, 68, 72, 65, 39, 87, 23, 95, 28, 85, 16, 29, 58, 47, 86, 47, 81, 21, 38, 85, 69, 67, 91, 78, 22, 56, 83, 23, 14, 89, 12, 15, 87, 31, 84, 1, 81, 80, 93, 8, 41, 5, 36, 85, 39, 2, 71, 25, 50, 77, 69, 93, 0, 30, 59, 72, 18, 70, 33, 81, 100, 57, 71, 58, 23, 3, 32, 92, 65, 17, 25, 48, 0, 78, 69, 89, 85, 71, 85, 83, 59, 6, 25, 1, 63, 9, 70, 54, 18, 37, 100, 80, 91, 3, 92, 30, 65, 11, 41, 100, 4, 56, 13, 49, 41, 72, 30, 89, 22, 1, 52, 91, 96, 74, 93, 56, 46, 68, 48, 74, 30, 46, 4, 69, 91, 77, 99, 3, 26, 48, 29, 34, 24, 60, 49, 71, 60, 20, 49, 46, 93, 83, 44, 67, 8, 11, 17, 40, 9, 57, 30, 20, 92, 6, 88, 88, 5, 6, 40, 4, 33, 83, 34, 26, 14, 11, 65, 34, 37, 24, 100, 36, 9, 73, 43, 87, 37, 64, 0, 5, 12, 68, 46, 57, 0, 100, 66, 81, 36, 54, 8, 27, 24, 9, 7, 58, 30, 77, 22, 60, 74, 89, 27, 36, 40, 54, 21, 100, 96, 87, 50, 34, 11, 60, 9, 50, 21, 36, 37, 1, 78, 100, 65, 30, 53, 54, 80, 26, 45, 10, 3, 83, 35, 42, 60, 98, 7, 53, 91, 57, 62, 42, 14, 30, 57, 5, 74, 70, 4, 72, 5, 12, 33, 73, 74, 13, 15, 86, 16, 46, 55, 50, 3, 7, 52, 7, 32, 52, 28, 64, 52, 95, 41, 79, 77, 86, 67, 20, 37, 39, 94, 99, 79, 48, 8, 2, 48, 16, 100, 17, 27, 60, 83, 11, 67, 20, 36, 51, 20, 49, 32, 33, 91, 74, 48, 46, 67, 40, 100, 33, 15, 61, 52, 38, 98, 43, 25, 16, 48, 41, 5, 86, 81, 72, 12, 52, 56, 78, 17, 21, 7, 83, 21, 0, 93, 43, 54, 16, 26, 45, 74, 9, 25, 65, 71, 35, 6, 63, 37, 85, 95, 56, 21, 52, 67, 25, 19, 72, 96, 60, 55, 49, 3, 53, 73, 30, 97, 31, 89, 7, 31, 86, 81, 52, 11, 5, 52, 64, 38, 2, 8, 19, 90, 51, 50, 3, 24, 98, 60, 11, 15, 72, 2, 14, 87, 33, 8, 20, 49, 37, 3, 62, 81, 49, 75, 94, 60, 3, 89, 48, 7, 36, 50, 0, 31, 30, 57, 79, 64, 76, 92, 98, 83, 3, 19, 65, 55, 36, 94, 95, 50, 99, 93, 17, 42, 94, 20, 0, 91, 37, 40, 87, 52, 53, 26, 90, 73, 62, 0, 60, 98, 68, 6, 45, 30, 47, 67, 99, 9, 13, 55, 9, 45, 2, 69, 31, 79, 76, 96, 1, 34, 55, 90, 95, 36, 94, 38, 91, 40, 68, 26, 96, 98, 55, 19, 83, 9, 95, 24, 87, 18, 53, 85, 36, 23, 82, 43, 86, 38, 42, 68, 86, 82, 2, 59, 92, 92, 44, 98, 88, 54, 24, 65, 100, 15, 44, 28, 41, 21, 29, 79, 9, 79, 54, 95, 41, 92, 97, 48, 60, 96, 64, 78, 1, 50, 35, 77, 89, 43, 83, 45, 88, 1, 77, 16, 45, 33, 20, 70, 63, 37, 57, 70, 52, 33, 15, 74, 93, 80, 30, 98, 74, 21, 7, 95, 93, 16, 78, 97, 32, 14, 80, 70, 42, 95, 58, 12, 27, 39, 6, 18, 67, 38, 28, 8, 66, 6, 2, 44, 73};
		List<Comparable> lst = new LinkedList<Comparable>();
		for(int v: data){
			//TODO:
			Util.insertItem(lst, Integer.valueOf(v), 0, lst.size()-1);
			//System.out.println(lst.toString());
		}
		assertTrue("sorted", sortedList(lst));
		assertTrue("size", lst.size() == data.length);

	}
}
